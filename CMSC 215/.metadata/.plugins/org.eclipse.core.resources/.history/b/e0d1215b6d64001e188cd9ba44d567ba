package application;

public class Interval<T extends Comparable<T>> {
	private T start;
	private T end;
	
	public Interval(T start, T end) {
		this.start = start;
		this.end = end;
	}
	
	public T getStart() {
		return start;
	}
	
	public T getEnd() {
		return end;
	}
	
	public boolean within(T value) {
		return value.compareTo(start) >= 0 && value.compareTo(end) <= 0;
	}
	
	public boolean subinterval(Interval<T> other) {
		return other.getStart().compareTo(start) >= 0 && other.getEnd().compareTo(end) <= 0;
	}
	
	public boolean overlaps(Interval<T> other) {
		return other.getEnd().compareTo(start) >= 0 && other.getStart().compareTo(end) <= 0;
	}
}
