package project_3;

public class InvalidInputException extends Exception{
	private String preOrderString;
	
	public InvalidInputException(String preOrderString) {
		super("Invalid preorder string input: " + preOrderString);
		this.preOrderString = preOrderString;
	}
	
	public String getPreOrderString() {
		return preOrderString;
	}
	
	public static void validatePreOrderString(String preOrderString) throws InvalidInputException {
		boolean validString = true;
		
		int openParenCount = 0;
		int asteriskCount = 0;
		boolean firstDigitEnclosed = false;
		
		for (char c : preOrderString.toCharArray()) {
			if (c == '(') {
				if (openParenCount == 0 && firstDigitEnclosed)
					validString = false;
				openParenCount++;
			} else if (c == ')') {
				if (openParenCount == 0) 
					validString = false;
				openParenCount--;
				if (asteriskCount > 2)
					validString = false;
				asteriskCount = 0;
			} else if (c == '*') {
				asteriskCount++;
				if (openParenCount == 0)
					validString = false;
			} else if (Character.isDigit(c)) {
				firstDigitEnclosed = true;
			} else if (c != ' ') {
				validString = false;
			}
		}
		
		if (openParenCount != 0 || asteriskCount > 2) {
			validString = false;
		}
		if (!validString) {
			throw new InvalidInputException(preOrderString);
		}
	}
}
